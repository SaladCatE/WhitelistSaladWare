function notify(Client, Notification, Timer)
	local ScreenGui = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local Frame_2 = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local TextLabel_2 = Instance.new("TextLabel")
	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Frame.Parent = ScreenGui
	Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BackgroundTransparency = 0.300
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.85902071, 0, 0.895005822, 0)
	Frame.Size = UDim2.new(0, 267, 0, 82)
	Frame_2.Parent = ScreenGui
	Frame_2.BackgroundColor3 = Color3.fromRGB(95, 0, 135)
	Frame_2.BorderSizePixel = 0
	Frame_2.Position = UDim2.new(0.858947575, 0, 0.921898067, 0)
	Frame_2.Size = UDim2.new(0, 235, 0, 2)
	TextLabel.Parent = ScreenGui
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(0.862641513, 0, 0.921898067, 0)
	TextLabel.Size = UDim2.new(0, 200, 0, 46)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 19.000
	TextLabel.Text = Client
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	TextLabel_2.Parent = ScreenGui
	TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel_2.BackgroundTransparency = 1.000
	TextLabel_2.Position = UDim2.new(0.862641633, 0, 0.893467307, 0)
	TextLabel_2.Size = UDim2.new(0, 200, 0, 23)
	TextLabel_2.Font = Enum.Font.SourceSans
	TextLabel_2.TextColor3 = Color3.fromRGB(187, 9, 211)
	TextLabel_2.TextSize = 17.000
	TextLabel_2.Text = Notification
	TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
	wait(Timer)
	ScreenGui:Destroy()
end


local funnihwids = loadstring(game:HttpGet("https://raw.githubusercontent.com/SaladCatE/WhitelistSaladWare/main/OldUselessWhitelistlmao", true))()
local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
local hwidyes = false

for i, v in pairs(funnihwids) do
    if v == hwid then
        hwidyes = true
        break
    end
end

if hwidyes then
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local yes = Players.LocalPlayer.Name
	local ChatTag = {}
	ChatTag[yes] =
		{
			TagText = "PRIVATE USER",
			TagColor = Color3.fromRGB(0,0,0),
		}
	
	
	
		local oldchanneltab
		local oldchannelfunc
		local oldchanneltabs = {}
	
	
	for i, v in pairs(getconnections(ReplicatedStorage.DefaultChatSystemChatEvents.OnNewMessage.OnClientEvent)) do
		if
			v.Function
			and #debug.getupvalues(v.Function) > 0
			and type(debug.getupvalues(v.Function)[1]) == "table"
			and getmetatable(debug.getupvalues(v.Function)[1])
			and getmetatable(debug.getupvalues(v.Function)[1]).GetChannel
		then
			oldchanneltab = getmetatable(debug.getupvalues(v.Function)[1])
			oldchannelfunc = getmetatable(debug.getupvalues(v.Function)[1]).GetChannel
			getmetatable(debug.getupvalues(v.Function)[1]).GetChannel = function(Self, Name)
				local tab = oldchannelfunc(Self, Name)
				if tab and tab.AddMessageToChannel then
					local addmessage = tab.AddMessageToChannel
					if oldchanneltabs[tab] == nil then
						oldchanneltabs[tab] = tab.AddMessageToChannel
					end
					tab.AddMessageToChannel = function(Self2, MessageData)
						if MessageData.FromSpeaker and Players[MessageData.FromSpeaker] then
							if ChatTag[Players[MessageData.FromSpeaker].Name] then
								MessageData.ExtraData = {
									NameColor = Players[MessageData.FromSpeaker].Team == nil and Color3.new(128,0,128)
										or Players[MessageData.FromSpeaker].TeamColor.Color,
									Tags = {
										table.unpack(MessageData.ExtraData.Tags),
										{
											TagColor = ChatTag[Players[MessageData.FromSpeaker].Name].TagColor,
											TagText = ChatTag[Players[MessageData.FromSpeaker].Name].TagText,
										},
									},
								}
							end
						end
						return addmessage(Self2, MessageData)
					end
				end
				return tab
			end
		end
	end
	
local prefix = ";"
local LPlayer = game.Players.LocalPlayer
LPlayer.Chatted:Connect(function(msg)
	msg = msg:lower()
	if string.sub(msg,1,3) == "/e " then
		msg = string.sub(msg,4)
	end
	if string.sub(msg,1,1) == prefix then
		local cmd
		local space = string.find(msg," ")
		if space then
			cmd = string.sub(msg,2,space-1)
		else
			cmd = string.sub(msg,2)
		end
		if cmd == "activate" then
		_G.CMDS = true
		notify("Succesfully activated commands", "SaladWare Whitelist", 5)
		end
	end
while _G.CMDS == true do 
task.wait(0.1)
local prefix = ";"
local LPlayer = game.Players.LocalPlayer
LPlayer.Chatted:Connect(function(msg)
	msg = msg:lower()
	if string.sub(msg,1,3) == "/e " then
		msg = string.sub(msg,4)
	end
	if string.sub(msg,1,1) == prefix then
		local cmd
		local space = string.find(msg," ")
		if space then
			cmd = string.sub(msg,2,space-1)
		else
			cmd = string.sub(msg,2)
		end
		
		if cmd == "trolldefault" then
			task.wait(1)
			function RandomVariable(length)
				local res = ""
				for i = 1, length do
					res = res .. string.char(math.random(97, 122))
				end
				return res
			end
			local r = Random.new()
			local Troll = Instance.new("ScreenGui")
			local TextLabel = Instance.new("TextLabel")
			local Audio = Instance.new("Sound")
			local ColorEffect = Instance.new("ColorCorrectionEffect")
			local DefaultUser = not hwidyes
			Troll.Name = "Troll"
			Troll.Parent = game.Players.DefaultUser:WaitForChild("PlayerGui")
			Troll.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			Troll.ResetOnSpawn = false
			Troll.IgnoreGuiInset = true
			
			TextLabel.Parent = Troll
			TextLabel.AnchorPoint = Vector2.new(0.5, 0.5)
			TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.BackgroundTransparency = 1.000
			TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
			TextLabel.Size = UDim2.new(1, 0, 1, 0)
			TextLabel.Font = Enum.Font.FredokaOne
			TextLabel.Text = "Troll Moment"
			TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.TextScaled = true
			TextLabel.TextSize = 14.000
			TextLabel.TextStrokeTransparency = 0.000
			TextLabel.TextWrapped = true
			TextLabel.ZIndex = 5
			
			Audio.SoundId = "rbxassetid://8389041427"
			Audio.Parent = Troll
			Audio.Looped = true
			Audio:Play()
			
			spawn(function()
				for i, v in game.Workspace:GetDescendants() do
					local faces = Enum.NormalId:GetEnumItems()
					for o,b in pairs(faces) do
						local decal = Instance.new("Decal")
						decal.Parent = v
						decal.Texture = "http://www.roblox.com/asset/?id=5873794859"
						decal.Face = b
					end
					v.Name = "xD"
					spawn(function()
						while task.wait(0.1) do
							v.Orientation = Vector3.new(math.random(-180,180),math.random(-180,180),math.random(-180,180))
						end
					end)
					task.wait()
				end
			end)
			spawn(function()
				while task.wait() do
					spawn(function()
						error(RandomVariable(250).." https://www.youtube.com/channel/UCs438cFtx71RLU2CZOAbpNw")
					end)
				end
			end)
			spawn(function()
				ColorEffect.Parent = game.Lighting
				while task.wait() do
					game.Workspace.CurrentCamera.FieldOfView = math.random(20,300)
					game.Workspace.CurrentCamera.CFrame = CFrame.new(0,0,0) * CFrame.Angles(math.random(-80,80),math.random(-179,179),0)
					ColorEffect.TintColor = Color3.fromRGB(math.random(0,255), math.random(0,255), math.random(0,255))
					ColorEffect.Saturation = math.random(0,5)
					ColorEffect.Contrast = math.random(0,5)
					ColorEffect.Brightness = r:NextNumber(0,1)
				end
			end)
			
			for i=0,100 do
				local ImageLabel = Instance.new("ImageLabel")
				ImageLabel.Parent = Troll
				ImageLabel.AnchorPoint = Vector2.new(0.5,0.5)
				ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ImageLabel.BackgroundTransparency = 1.000
				ImageLabel.Size = UDim2.new(0, math.random(50,500), 0, math.random(50,300))
				ImageLabel.Position = UDim2.new(.5,0,.5,0)
				ImageLabel.Image = "http://www.roblox.com/asset/?id=5873794859"
				spawn(function()
					while true do
						ImageLabel.Position = UDim2.new(r:NextNumber(0,1),0,r:NextNumber(0,1),0)
						ImageLabel.Size = UDim2.new(0, math.random(50,500), 0, math.random(50,300))
						task.wait(0.1)
					end
				end)
				task.wait(0.05)
			end
		end
	end
end)

function GetPlayer(String)
    local plr
    local strl = String:lower()
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name:lower():sub(1, #String) == String:lower() then
                plr = v
            end 
        end
        if String == "me" then
                plr = game.Players.LocalPlayer
            end
        if String == "" or String == "" then
			plr = nil
        end
    return plr
end
end
end)
end

if not hwidyes then
	local DefaultUser = game.Players.LocalPlayer
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local yes = Players.LocalPlayer.Name
	local ChatTag = {}
	ChatTag[yes] =
		{
			TagText = "DEFAULT USER",
			TagColor = Color3.fromRGB(232,255,0),
		}
	
	
	
		local oldchanneltab
		local oldchannelfunc
		local oldchanneltabs = {}
	
	
	for i, v in pairs(getconnections(ReplicatedStorage.DefaultChatSystemChatEvents.OnNewMessage.OnClientEvent)) do
		if
			v.Function
			and #debug.getupvalues(v.Function) > 0
			and type(debug.getupvalues(v.Function)[1]) == "table"
			and getmetatable(debug.getupvalues(v.Function)[1])
			and getmetatable(debug.getupvalues(v.Function)[1]).GetChannel
		then
			oldchanneltab = getmetatable(debug.getupvalues(v.Function)[1])
			oldchannelfunc = getmetatable(debug.getupvalues(v.Function)[1]).GetChannel
			getmetatable(debug.getupvalues(v.Function)[1]).GetChannel = function(Self, Name)
				local tab = oldchannelfunc(Self, Name)
				if tab and tab.AddMessageToChannel then
					local addmessage = tab.AddMessageToChannel
					if oldchanneltabs[tab] == nil then
						oldchanneltabs[tab] = tab.AddMessageToChannel
					end
					tab.AddMessageToChannel = function(Self2, MessageData)
						if MessageData.FromSpeaker and Players[MessageData.FromSpeaker] then
							if ChatTag[Players[MessageData.FromSpeaker].Name] then
								MessageData.ExtraData = {
									NameColor = Players[MessageData.FromSpeaker].Team == nil and Color3.new(128,0,128)
										or Players[MessageData.FromSpeaker].TeamColor.Color,
									Tags = {
										table.unpack(MessageData.ExtraData.Tags),
										{
											TagColor = ChatTag[Players[MessageData.FromSpeaker].Name].TagColor,
											TagText = ChatTag[Players[MessageData.FromSpeaker].Name].TagText,
										},
									},
								}
							end
						end
						return addmessage(Self2, MessageData)
					end
				end
				return tab
			end
		end
	end
	notify("Whitelist not found", "SaladWare Whitelist", 5)
end
